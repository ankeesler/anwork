// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	task.proto

It has these top-level messages:
	TaskProtobuf
	TaskManagerJournalEntryProtobuf
	TaskManagerJournalProtobuf
	TaskManagerProtobuf
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type TaskStateProtobuf int32

const (
	TaskStateProtobuf_WAITING  TaskStateProtobuf = 0
	TaskStateProtobuf_BLOCKED  TaskStateProtobuf = 1
	TaskStateProtobuf_RUNNING  TaskStateProtobuf = 2
	TaskStateProtobuf_FINISHED TaskStateProtobuf = 3
)

var TaskStateProtobuf_name = map[int32]string{
	0: "WAITING",
	1: "BLOCKED",
	2: "RUNNING",
	3: "FINISHED",
}
var TaskStateProtobuf_value = map[string]int32{
	"WAITING":  0,
	"BLOCKED":  1,
	"RUNNING":  2,
	"FINISHED": 3,
}

func (x TaskStateProtobuf) String() string {
	return proto1.EnumName(TaskStateProtobuf_name, int32(x))
}
func (TaskStateProtobuf) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TaskManagerActionTypeProtobuf int32

const (
	TaskManagerActionTypeProtobuf_CREATE       TaskManagerActionTypeProtobuf = 0
	TaskManagerActionTypeProtobuf_DELETE       TaskManagerActionTypeProtobuf = 1
	TaskManagerActionTypeProtobuf_SET_STATE    TaskManagerActionTypeProtobuf = 2
	TaskManagerActionTypeProtobuf_NOTE         TaskManagerActionTypeProtobuf = 3
	TaskManagerActionTypeProtobuf_SET_PRIORITY TaskManagerActionTypeProtobuf = 4
)

var TaskManagerActionTypeProtobuf_name = map[int32]string{
	0: "CREATE",
	1: "DELETE",
	2: "SET_STATE",
	3: "NOTE",
	4: "SET_PRIORITY",
}
var TaskManagerActionTypeProtobuf_value = map[string]int32{
	"CREATE":       0,
	"DELETE":       1,
	"SET_STATE":    2,
	"NOTE":         3,
	"SET_PRIORITY": 4,
}

func (x TaskManagerActionTypeProtobuf) String() string {
	return proto1.EnumName(TaskManagerActionTypeProtobuf_name, int32(x))
}
func (TaskManagerActionTypeProtobuf) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1}
}

type TaskProtobuf struct {
	Name        string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id          int32             `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Description string            `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	StartDate   int64             `protobuf:"varint,4,opt,name=startDate" json:"startDate,omitempty"`
	Priority    int32             `protobuf:"varint,5,opt,name=priority" json:"priority,omitempty"`
	State       TaskStateProtobuf `protobuf:"varint,6,opt,name=state,enum=TaskStateProtobuf" json:"state,omitempty"`
}

func (m *TaskProtobuf) Reset()                    { *m = TaskProtobuf{} }
func (m *TaskProtobuf) String() string            { return proto1.CompactTextString(m) }
func (*TaskProtobuf) ProtoMessage()               {}
func (*TaskProtobuf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TaskProtobuf) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TaskProtobuf) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TaskProtobuf) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TaskProtobuf) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *TaskProtobuf) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *TaskProtobuf) GetState() TaskStateProtobuf {
	if m != nil {
		return m.State
	}
	return TaskStateProtobuf_WAITING
}

type TaskManagerJournalEntryProtobuf struct {
	Task       *TaskProtobuf                 `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
	ActionType TaskManagerActionTypeProtobuf `protobuf:"varint,2,opt,name=actionType,enum=TaskManagerActionTypeProtobuf" json:"actionType,omitempty"`
	Date       int64                         `protobuf:"varint,3,opt,name=date" json:"date,omitempty"`
	Detail     string                        `protobuf:"bytes,4,opt,name=detail" json:"detail,omitempty"`
}

func (m *TaskManagerJournalEntryProtobuf) Reset()                    { *m = TaskManagerJournalEntryProtobuf{} }
func (m *TaskManagerJournalEntryProtobuf) String() string            { return proto1.CompactTextString(m) }
func (*TaskManagerJournalEntryProtobuf) ProtoMessage()               {}
func (*TaskManagerJournalEntryProtobuf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TaskManagerJournalEntryProtobuf) GetTask() *TaskProtobuf {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *TaskManagerJournalEntryProtobuf) GetActionType() TaskManagerActionTypeProtobuf {
	if m != nil {
		return m.ActionType
	}
	return TaskManagerActionTypeProtobuf_CREATE
}

func (m *TaskManagerJournalEntryProtobuf) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *TaskManagerJournalEntryProtobuf) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type TaskManagerJournalProtobuf struct {
	Entries []*TaskManagerJournalEntryProtobuf `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *TaskManagerJournalProtobuf) Reset()                    { *m = TaskManagerJournalProtobuf{} }
func (m *TaskManagerJournalProtobuf) String() string            { return proto1.CompactTextString(m) }
func (*TaskManagerJournalProtobuf) ProtoMessage()               {}
func (*TaskManagerJournalProtobuf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TaskManagerJournalProtobuf) GetEntries() []*TaskManagerJournalEntryProtobuf {
	if m != nil {
		return m.Entries
	}
	return nil
}

type TaskManagerProtobuf struct {
	Tasks   []*TaskProtobuf             `protobuf:"bytes,1,rep,name=tasks" json:"tasks,omitempty"`
	Journal *TaskManagerJournalProtobuf `protobuf:"bytes,2,opt,name=journal" json:"journal,omitempty"`
}

func (m *TaskManagerProtobuf) Reset()                    { *m = TaskManagerProtobuf{} }
func (m *TaskManagerProtobuf) String() string            { return proto1.CompactTextString(m) }
func (*TaskManagerProtobuf) ProtoMessage()               {}
func (*TaskManagerProtobuf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TaskManagerProtobuf) GetTasks() []*TaskProtobuf {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *TaskManagerProtobuf) GetJournal() *TaskManagerJournalProtobuf {
	if m != nil {
		return m.Journal
	}
	return nil
}

func init() {
	proto1.RegisterType((*TaskProtobuf)(nil), "TaskProtobuf")
	proto1.RegisterType((*TaskManagerJournalEntryProtobuf)(nil), "TaskManagerJournalEntryProtobuf")
	proto1.RegisterType((*TaskManagerJournalProtobuf)(nil), "TaskManagerJournalProtobuf")
	proto1.RegisterType((*TaskManagerProtobuf)(nil), "TaskManagerProtobuf")
	proto1.RegisterEnum("TaskStateProtobuf", TaskStateProtobuf_name, TaskStateProtobuf_value)
	proto1.RegisterEnum("TaskManagerActionTypeProtobuf", TaskManagerActionTypeProtobuf_name, TaskManagerActionTypeProtobuf_value)
}

func init() { proto1.RegisterFile("task.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0xc7, 0xbb, 0x7e, 0xe4, 0x31, 0x4e, 0x23, 0x33, 0x48, 0xc8, 0x2a, 0x2f, 0x13, 0x2e, 0x56,
	0x0f, 0x3e, 0x18, 0x71, 0xe1, 0x80, 0x94, 0x36, 0x0b, 0x35, 0x14, 0xa7, 0xda, 0x2c, 0xe2, 0x71,
	0x41, 0x9b, 0xda, 0x20, 0xd3, 0x62, 0x87, 0xf5, 0xf6, 0x90, 0x6f, 0xc5, 0x91, 0x8f, 0x87, 0x76,
	0x83, 0x8d, 0x45, 0x05, 0x3d, 0x79, 0x66, 0xfe, 0x33, 0xa3, 0xff, 0x6f, 0xbc, 0x00, 0x4a, 0x34,
	0x17, 0xf1, 0x46, 0xd6, 0xaa, 0x9e, 0xfd, 0x24, 0x30, 0xe1, 0xa2, 0xb9, 0x38, 0xd3, 0xd9, 0xfa,
	0xea, 0x33, 0x22, 0x38, 0x95, 0xf8, 0x56, 0x04, 0x24, 0x24, 0xd1, 0x98, 0x99, 0x18, 0xa7, 0x60,
	0x95, 0x79, 0x60, 0x85, 0x24, 0x72, 0x99, 0x55, 0xe6, 0x18, 0x82, 0x97, 0x17, 0xcd, 0xb9, 0x2c,
	0x37, 0xaa, 0xac, 0xab, 0xc0, 0x36, 0xad, 0xfd, 0x12, 0xde, 0x83, 0x71, 0xa3, 0x84, 0x54, 0x0b,
	0xa1, 0x8a, 0xc0, 0x09, 0x49, 0x64, 0xb3, 0x3f, 0x05, 0x3c, 0x80, 0xd1, 0x46, 0x96, 0xb5, 0x2c,
	0xd5, 0x36, 0x70, 0xcd, 0xd6, 0x2e, 0xc7, 0x08, 0xdc, 0x46, 0xe9, 0xa9, 0x41, 0x48, 0xa2, 0x69,
	0x82, 0xb1, 0x76, 0xb7, 0xd2, 0x95, 0xd6, 0x22, 0xdb, 0x35, 0xcc, 0x7e, 0x10, 0x78, 0xa8, 0xc5,
	0x37, 0xa2, 0x12, 0x5f, 0x0a, 0xf9, 0xaa, 0xbe, 0x92, 0x95, 0xb8, 0xa4, 0x95, 0x92, 0xdb, 0x8e,
	0xe6, 0x11, 0x38, 0x1a, 0xd6, 0xd0, 0x78, 0xc9, 0x7e, 0xdc, 0x47, 0x65, 0x46, 0xc2, 0xe7, 0x00,
	0xe2, 0x5c, 0x9b, 0xe6, 0xdb, 0x4d, 0x61, 0x20, 0xa7, 0xc9, 0x83, 0xb8, 0xb7, 0x78, 0xde, 0xa9,
	0xdd, 0x64, 0x6f, 0x42, 0x1f, 0x2c, 0xd7, 0x7e, 0x6d, 0x43, 0x69, 0x62, 0xbc, 0x03, 0x83, 0xbc,
	0x50, 0xa2, 0xbc, 0x34, 0xec, 0x63, 0xf6, 0x3b, 0x9b, 0xbd, 0x87, 0x83, 0xeb, 0x8e, 0x3b, 0xb3,
	0xcf, 0x60, 0x58, 0x54, 0x4a, 0x96, 0x45, 0x13, 0x90, 0xd0, 0x8e, 0xbc, 0x24, 0x8c, 0x6f, 0xe0,
	0x63, 0xed, 0xc0, 0xec, 0x3b, 0xdc, 0xee, 0xf5, 0x76, 0x2b, 0x1f, 0x83, 0xab, 0x21, 0xdb, 0x85,
	0x7f, 0x1d, 0x60, 0xa7, 0xe1, 0x53, 0x18, 0x7e, 0xdd, 0x2d, 0x37, 0xf8, 0x5e, 0x72, 0x37, 0xfe,
	0xb7, 0x4b, 0xd6, 0xf6, 0x1e, 0x9e, 0xc0, 0xad, 0x6b, 0xff, 0x06, 0x3d, 0x18, 0xbe, 0x9b, 0xa7,
	0x3c, 0xcd, 0x5e, 0xfa, 0x7b, 0x3a, 0x39, 0x3a, 0x5d, 0x1e, 0xbf, 0xa6, 0x0b, 0x9f, 0xe8, 0x84,
	0xbd, 0xcd, 0x32, 0xad, 0x58, 0x38, 0x81, 0xd1, 0x8b, 0x34, 0x4b, 0x57, 0x27, 0x74, 0xe1, 0xdb,
	0x87, 0x6b, 0xb8, 0xff, 0xdf, 0x7b, 0x23, 0xc0, 0xe0, 0x98, 0xd1, 0x39, 0xa7, 0xfe, 0x9e, 0x8e,
	0x17, 0xf4, 0x94, 0x72, 0xea, 0x13, 0xdc, 0x87, 0xf1, 0x8a, 0xf2, 0x4f, 0x2b, 0xae, 0x25, 0x0b,
	0x47, 0xe0, 0x64, 0x4b, 0x4e, 0x7d, 0x1b, 0x7d, 0x98, 0x68, 0xe1, 0x8c, 0xa5, 0x4b, 0x96, 0xf2,
	0x0f, 0xbe, 0x73, 0x34, 0xfc, 0xe8, 0x9a, 0x17, 0xbf, 0x1e, 0x98, 0xcf, 0x93, 0x5f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xe8, 0x56, 0x3b, 0x21, 0x06, 0x03, 0x00, 0x00,
}
